name: Build
on: [push]

jobs:
  build:
    name: Forcegague app
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Test
        run: echo ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Download Android keystore
        id: write_file
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'key.jks'
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Get flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.x'
          channel: 'stable'

      - name: Create key.properties
        run: |
          cd forcegauge
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties

      - name: Build flutter
        run: |
          cd forcegauge
          flutter pub get
          flutter build apk --release --split-per-abi
          flutter build appbundle

      - name: Upload app bundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: forcegauge/build/app/outputs/bundle/release/app-release.aab


#https://medium.com/@iqan/continuously-releasing-flutter-app-to-play-store-using-github-actions-eca2f5f6e996
      #    flutter pub get
      #    flutter build apk
      #    cp ./build/app/outputs/flutter-apk/app-release.apk ./forcegauge.apk

      #   flutter pub get
      #   flutter test
      #   flutter build apk --release --split-per-abi
      #   flutter build appbundle      



      # - name: Create a Release in GitHub
      #   uses: actions/checkout@v2
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "./build/app/outputs/flutter-apk/app-release.apk"
      #     token: ${{ secrets.GITHUB_TOKEN }}



    #  release:
    # name: Release app to internal track
    # needs: [ build ]
    # runs-on: ubuntu-latest
    # steps:
    # - uses: actions/checkout@v1
    # - name: Get appbundle from artifacts
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: appbundle
    # - name: Release app to internal track
    #   uses: r0adkll/upload-google-play@v1
    #   with:
    #     serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
    #     packageName: com.fluttercicddemo
    #     releaseFile: app-release.aab
    #     track: internal
    #     whatsNewDirectory: distribution/whatsnew